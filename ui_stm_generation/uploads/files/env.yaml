# Environment YAML file which contains all basic parameters required for Job Execution
# We specifically used yaml format to add description for each key
execution_account: "dataingestion" # AWS account from this process is getting executed
environment_parameter_store_key: "/domain/environment" # Parameter store key to get Environment Name i.e dev, qa, stage or prod
dataingestion:
    domain_lob: "nyl-dataingestion" # Line of Business name
    component: "base"
    codebase_bucket_parameter_store_key: "/{component}/{domain_lob}-{domain_env}-codebase"
    raw_bucket_key: "/{component}/{domain_lob}-{domain_env}-raw" # raw bucket ssm parameter key
    landing_bucket_key: "/{component}/{domain_lob}-{domain_env}-landing" # landing bucket ssm parameter key
    structured_bucket_key: "/{component}/{domain_lob}-{domain_env}-structured" # structured bucket ssm parameter key
datawarehouse:
    domain_lob: "nyl-datawarehouse" # Line of Business name
    component: "base"
    redshift:
        assume_role_parameter_store_key: "/{component}/nyl-datawarehouse-{domain_env}-etl-raw-structured-role" # Assume role to use from warehouse Account
        assume_role_external_id_parameter_store_key: "/{component}/nyl-datawarehouse-{domain_env}-etl-raw-structured-external-id" # Assume role to use from warehouse Account
        secret_name: "nyl-datawarehouse-{domain_env}-edmetl"
        assume_role_for: "secretsmanager"
datalake:
    domain_lob: "nyl-datalake" # Line of Business name
    component: "base"
    external_id_key: "etl-raw-structured-external-id"
    etl_raw_structured_role_key: "etl-raw-structured-role"
    etl_raw_structured_elmo_key: "etl-raw-structured-elmo"
config_db:
    schema: "etl_spark_config"
    tables:
        driver: "etl_spark_driver"
        table_list: "etl_spark_tablelist"
        stm: "etl_spark_stm"
        ccpa: "ccpa_meta"
    config_secret: "{domain_lob}-{domain_env}-edmetl-aurora-conf" # Config db secret
    output_key: "ccpa/etl/config"
protegrity:
    protect_lambda_ssm_key: "/{component}/{domain_lob}-{domain_env}-protegrity-function-arn" #proect lambda ARN
    pfed_jwt_endpoint:
        dev: "https://mdl.pfed.newyorklife.com/as/token.oauth2"
        qa: "https://mdl.pfed.newyorklife.com/as/token.oauth2"
        stage: "https://mdl.pfed.newyorklife.com/as/token.oauth2"
        prod: "https://www.pfed.newyorklife.com/as/token.oauth2"
    batch_size: 25000
    policy_user: "edm-jwt-filepub" # getting the username from secret
    jwt_secret: "{domain_lob}-{domain_env}-edmccpa-protegrity" # secret name for policy_user
ccpa:
    datawarehouse_ccpa_redshift_role_key: "/base/nyl-datawarehouse-dev-ccpa-redshift-role"
    dataingestion_ccpa_redshift_role_key: "/base/nyl-dataingestion-dev-ccpa-redshift-role"
